//equals() Method:

-->The equals() method is a method provided by the Object class in Java, and it is meant to be overridden by classes to provide meaningful content-based comparison.
-->For objects, it compares the content (values) of the objects, not their memory addresses.
-->It is commonly used for comparing strings and other complex objects.

Example:
String str1 = new String("Hello");
String str2 = new String("Hello");
System.out.println(str1.equals(str2));  // Output: true


//== Operator:

-->The == operator, when used with objects, compares the memory addresses of the objects, not their content.
-->It is used to compare primitive types for equality.

Example:
String str1 = new String("Hello");
String str2 = new String("Hello");
System.out.println(str1 == str2);  // Output: false


Code Snippet:

String s1 = "Hello";
String s2 = new String("Hello");
System.out.println(s1 == s2);         // Line 1
System.out.println(s1.equals(s2));    // Line 2

Output Explanation:
-->Line 1 uses == to compare the memory addresses of s1 and s2. Since s2 is created using the new keyword, it will have a different memory address than the string literal "Hello".
-->Therefore, the output of Line 1 will be false.
-->Line 2 uses the equals() method to compare the content of s1 and s2. The content is the same ("Hello"), so the output will be true.
